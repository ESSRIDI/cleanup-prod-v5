@use "sass:math";
@use "../abstracts/variables";
@use "../abstracts/mixins";

//classes de base//

//containers
.cleanup-container-sm {
    @include mixins.container(variables.$cleanup-small-container);
  }
  .cleanup-container {
    @include mixins.container(variables.$cleanup-base-container);
  }
  
  .cleanup-container-lg {
    @include mixins.container(variables.$cleanup-large-container);
  }
// affichage row
  .cleanup-row {
    display: flex;
  flex-flow: row wrap;
justify-content: center;
  }

//justification du contenu

@each $val in variables.$layout-values {
    .cleanup-justify-#{$val} {
      justify-content: $val;
    }
  }

  // espaces entre colonnes
@each $cleanupy, $val in variables.$grid-gaps {
    .cleanup-gap-#{$cleanupy} > * {
      padding: $val;
    }
    .cleanup-gap-#{$cleanupy} {
      margin-left: -$val;
      margin-right: -$val;
    }
  }

  // classes de column  !!attention il faut absoulment inclure la balise mÃ©ta viewport 
  // pourqu'il fonctionnent correctement sur le navigateur Google

@include mixins.xs {
  @for $i from 1 through variables.$grid-columns {
    .cleanup-col-#{$i}-xs {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, variables.$grid-columns);
    }
  }
}

@include mixins.sm {
  @for $i from 1 through variables.$grid-columns {
    .cleanup-col-#{$i}-sm {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, variables.$grid-columns);
    }
  }
}
@include mixins.md {
  @for $i from 1 through variables.$grid-columns {
    .cleanup-col-#{$i}-md {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, variables.$grid-columns);
    }
  }
}
@include mixins.lg {
  @for $i from 1 through variables.$grid-columns {
    .cleanup-col-#{$i}-lg {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, variables.$grid-columns);
    }
  }
}

@include mixins.xl {
  @for $i from 1 through variables.$grid-columns {
    .cleanup-col-#{$i}-xl {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, variables.$grid-columns);
    }
  }
}

//justification du contenu

@each $val in variables.$layout-values {
  .cleanup-justify-#{$val} {
    justify-content: $val;
    
  }
}

@each $val in variables.$text-align-values{
  .cleanup-text-align-#{$val} {
    text-align: $val;
    
  }
}


// espaces entre colonnes
@each $cleanupy, $val in variables.$grid-gaps {
  .cleanup-gap-#{$cleanupy} > * {
    padding: $val;
  }
  .cleanup-gap-#{$cleanupy} {
    margin-left: -$val;
    margin-right: -$val;
  }
}